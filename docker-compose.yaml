services:
  api:
    build: .
    container_name: api
    volumes:
      - ./:/api
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - backend
    restart: unless-stopped

  postgres:
    image: postgres:16-alpine3.22
    shm_size: 128mb
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - backend

  adminer:
    image: adminer:5.4.0-standalone
    ports:
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - backend
      - frontend
    restart: unless-stopped

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  redisinsight:
    image: redis/redisinsight:2.70
    ports:
      - "5540:5540"
    volumes:
      - redisinsight_data:/data
    depends_on:
      - redis
    networks:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  redisinsight_data:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

